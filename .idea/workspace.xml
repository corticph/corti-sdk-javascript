<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5636f06c-1d6a-486b-a292-d931ebe67d75" name="Changes" comment="refactor: remove skipped tests and unused modelName references in integration tests" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitRewordedCommitMessages">
    <option name="commitMessagesMapping">
      <RewordedCommitMessageMapping>
        <option name="originalMessage" value="Parked changed for WebSocket" />
        <option name="rewordedMessage" value="Other types&#10;&#10;&#10;Parked changed for WebSocket" />
      </RewordedCommitMessageMapping>
    </option>
    <option name="currentCommit" value="1" />
    <option name="onto" value="fb510553ff22e8609c9387157ac5db2be7efa135" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/node_modules/typescript/lib/lib.es5.d.ts" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2y5ZfnhQ8GnqN0Gy4MWunEyLHEa" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Jest.All Integration Tests.executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiAuth.executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiClient.templates.list.returns templates filtered by lang (array).executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiClient.templates.list.returns templates filtered by lang (string).executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiClient.templates.list.returns templates filtered by lang.executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiClient.templates.list.returns templates filtered by org.executor&quot;: &quot;Run&quot;,
    &quot;Jest.CortiClient.templates.list.returns templates with no filters.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all optional values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all optional values.should create document with DocumentsCreateRequestWithTemplateKey using facts context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all optional values.should create document with DocumentsCreateRequestWithTemplateKey using string context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all optional values.should create document with DocumentsCreateRequestWithTemplateKey using transcript context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all source enum values in facts context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with all source enum values in facts context.should create document with DocumentsCreateRequestWithTemplate using source: core.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with only required values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with only required values.should create document with DocumentsCreateRequestWithTemplate using facts context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with only required values.should create document with DocumentsCreateRequestWithTemplateId using facts context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should create document with only required values.should create document with DocumentsCreateRequestWithTemplateKey using facts context.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.create.should handle errors when required parameters are missing.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.update.should update document with all possible optional parameters without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.documents.update.should update document with section variations.should update document with section containing all optional fields without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.facts.batchUpdate.should batch update multiple facts.should batch update multiple facts with different fields without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.facts.update.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.executor&quot;: &quot;Coverage&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with all gender enum values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with all optional parameters without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with all status enum values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with all type enum values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with only required values without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should create interaction with only required values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should throw error when required fields are missing.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.create.should throw error when required fields are missing.should throw error when encounter is missing.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.error handling.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by encounterStatus.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by encounterStatus.should filter by multiple encounterStatus array.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by encounterStatus.should find interactions for all valid status enum values.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by encounterStatus.should return empty result for non-existent encounterStatus.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by patient (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.filtering by patient.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.pagination.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.should return empty result when no interactions exist.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.should return interactions when they exist.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.should sort by default (createdAt desc) when no sort parameters provided.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by createdAt.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by endedAt.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by id.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by patient.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by patient.should sort by patient desc.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.list.sorting.sort by updatedAt.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.update.should throw error when invalid parameters are provided.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.interactions.update.should throw error when invalid parameters are provided.should throw error when interaction ID is invalid.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.delete.should not throw error when recording ID does not exist.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from browser-side File object.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from browser-side File object.should upload trouble-breathing.mp3 using File object without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from server-side file stream (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from server-side file stream.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from server-side file stream.should upload trouble-breathing.mp3 using File object without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.recordings.upload.should upload recording from server-side file stream.should upload trouble-breathing.mp3 using createReadStream without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect to stream with only required values.should connect to stream with custom reconnect attempts and receive CONFIG_ACCEPTED.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect to stream with only required values.should connect to stream with only interaction ID and receive CONFIG_ACCEPTED.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect with different mode types.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect with different participant roles.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect with full configuration.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should connect with minimal configuration.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should handle configuration errors.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should handle transcription scenario with audio.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should handle transcription scenario with audio.should process audio and receive facts messages.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.stream.connect.should handle transcription scenario with audio.should process audio and receive transcription messages.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.get.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.combined filtering (lang, org, and status parameters).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.language filtering (lang parameter).should filter templates by multiple languages (lang: [\&quot;da\&quot;, \&quot;en\&quot;]).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.organization filtering (org parameter).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.organization filtering (org parameter).should filter templates by multiple organizations (org: [\&quot;corti\&quot;, \&quot;another-org\&quot;]).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.organization filtering (org parameter).should filter templates by single organization (org: \&quot;corti\&quot;).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.organization filtering (org parameter).should return empty or filtered results for non-existent organization.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.should retrieve templates without parameters.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.status filtering (status parameter).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.status filtering (status parameter).should filter templates by multiple statuses (status: [\&quot;published\&quot;, \&quot;draft\&quot;]).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.status filtering (status parameter).should filter templates by single status (status: \&quot;published\&quot;).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.list.status filtering (status parameter).should return empty or filtered results for non-existent status.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.combined filtering (lang and org parameters).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.language filtering (lang parameter).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.organization filtering (org parameter).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.organization filtering (org parameter).should filter template sections by multiple organizations (org: [\&quot;corti\&quot;, \&quot;another-org\&quot;]).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.organization filtering (org parameter).should return empty or filtered results for non-existent organization.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.should filter template sections by language (lang: \&quot;en\&quot;).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.should filter template sections by multiple languages (lang: [\&quot;da\&quot;, \&quot;en\&quot;]).executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.templates.sectionList.should retrieve template sections without parameters.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcribe.connect.should connect with full configuration.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcribe.connect.should connect with minimal configuration.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcribe.connect.should handle configuration errors.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcribe.connect.should handle configuration errors.should reject missing configuration.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcribe.connect.should handle transcription scenario with audio.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.create.should create transcript with all optional parameters without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.create.should create transcript with only required values.should create transcript with only required fields without errors or warnings.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.create.should throw error when required fields are missing.should throw error when diarize is true but isMultichannel is false.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.create.should throw error when required fields are missing.should throw error when modelName is missing.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.create.should throw error when required fields are missing.should throw error when multiple participants are provided but isMultichannel is false.executor&quot;: &quot;Run&quot;,
    &quot;Jest.cortiClient.transcripts.list.full parameter tests.should return different responses when full parameter is true vs false.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.create.integration.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.create.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.delete.integration.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.delete.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.get.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.list.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.documents.update.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.facts.batchUpdate.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.facts.create.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.facts.factGroupsList.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.facts.list.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.facts.update.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.interactions.create.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.interactions.delete.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.interactions.get.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.interactions.list.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.interactions.update.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.recordings.upload.integration.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.templates.list.integration.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.templates.list.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;Jest.test.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;incorporate-agents-api-to-sdk-gro-398-agents&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/nmt/corti-sdk-typescript&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/Users/nmt/corti-sdk-typescript/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/nmt/corti-sdk-typescript/node_modules/prettier&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/nmt/corti-sdk-typescript/node_modules/typescript/lib&quot;,
    &quot;two.files.diff.last.used.file&quot;: &quot;/Users/nmt/corti-sdk-typescript/reference-corti.md&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/custom" />
      <recent name="$PROJECT_DIR$/src/custom/serialization" />
      <recent name="$PROJECT_DIR$/src/custom/serialization/requests" />
      <recent name="$PROJECT_DIR$/src/custom/requests" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/custom/serialization/requests" />
      <recent name="$PROJECT_DIR$/src/custom/requests" />
      <recent name="$PROJECT_DIR$/src/custom" />
      <recent name="$PROJECT_DIR$/src/custom/api/resources/auth/client" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.All Integration Tests">
    <configuration name="All Integration Tests" type="JavaScriptTestRunnerJest">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="test-e10035-test" />
        <env name="CORTI_CLIENT_SECRET" value="LLuSCTAYKG6aoE8xDkf1NSL9kRXCv0fy" />
        <env name="CORTI_ENVIRONMENT" value="eu" />
        <env name="CORTI_TENANT_NAME" value="base" />
      </envs>
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="markitosha-580b7906-2d09-48d5-9aa3-c638b6d0d7a4-test" />
        <env name="CORTI_CLIENT_SECRET" value="hqO2fiOVmHhZI6rsIFEcQKivRXiNoXae" />
        <env name="CORTI_ENVIRONMENT" value="dev-weu" />
        <env name="CORTI_TENANT_NAME" value="copilotdeveu" />
      </envs>
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="cortiClient.templates.list" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="markitosha-580b7906-2d09-48d5-9aa3-c638b6d0d7a4-test" />
        <env name="CORTI_CLIENT_SECRET" value="hqO2fiOVmHhZI6rsIFEcQKivRXiNoXae" />
        <env name="CORTI_ENVIRONMENT" value="dev-weu" />
        <env name="CORTI_TENANT_NAME" value="copilotdeveu" />
      </envs>
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/custom/templates.list.integration.ts" />
      <test-names>
        <test-name value="cortiClient.templates.list" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="cortiClient.templates.list.language filtering (lang parameter).should filter templates by multiple languages (lang: [&quot;da&quot;, &quot;en&quot;])" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="markitosha-580b7906-2d09-48d5-9aa3-c638b6d0d7a4-test" />
        <env name="CORTI_CLIENT_SECRET" value="hqO2fiOVmHhZI6rsIFEcQKivRXiNoXae" />
        <env name="CORTI_ENVIRONMENT" value="dev-weu" />
        <env name="CORTI_TENANT_NAME" value="copilotdeveu" />
      </envs>
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/custom/templates.list.integration.ts" />
      <test-names>
        <test-name value="cortiClient.templates.list" />
        <test-name value="language filtering (lang parameter)" />
        <test-name value="should filter templates by multiple languages (lang: [&quot;da&quot;, &quot;en&quot;])" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="cortiClient.templates.list.organization filtering (org parameter).should filter templates by multiple organizations (org: [&quot;corti&quot;, &quot;another-org&quot;])" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="markitosha-580b7906-2d09-48d5-9aa3-c638b6d0d7a4-test" />
        <env name="CORTI_CLIENT_SECRET" value="hqO2fiOVmHhZI6rsIFEcQKivRXiNoXae" />
        <env name="CORTI_ENVIRONMENT" value="dev-weu" />
        <env name="CORTI_TENANT_NAME" value="copilotdeveu" />
      </envs>
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/custom/templates.list.integration.ts" />
      <test-names>
        <test-name value="cortiClient.templates.list" />
        <test-name value="organization filtering (org parameter)" />
        <test-name value="should filter templates by multiple organizations (org: [&quot;corti&quot;, &quot;another-org&quot;])" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="cortiClient.transcripts.create.should create transcript with only required values.should create transcript with only required fields without errors or warnings" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="test-e10035-test" />
        <env name="CORTI_CLIENT_SECRET" value="LLuSCTAYKG6aoE8xDkf1NSL9kRXCv0fy" />
        <env name="CORTI_ENVIRONMENT" value="eu" />
        <env name="CORTI_TENANT_NAME" value="base" />
      </envs>
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/custom/transcripts.create.integration.ts" />
      <test-names>
        <test-name value="cortiClient.transcripts.create" />
        <test-name value="should create transcript with only required values" />
        <test-name value="should create transcript with only required fields without errors or warnings" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="cortiClient.transcripts.list.full parameter tests.should return different responses when full parameter is true vs false" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <config-file value="$PROJECT_DIR$/jest.integration.config.mjs" />
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs>
        <env name="CORTI_CLIENT_ID" value="test-e10035-test" />
        <env name="CORTI_CLIENT_SECRET" value="LLuSCTAYKG6aoE8xDkf1NSL9kRXCv0fy" />
        <env name="CORTI_ENVIRONMENT" value="eu" />
        <env name="CORTI_TENANT_NAME" value="base" />
      </envs>
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/custom/transcripts.list.integration.ts" />
      <test-names>
        <test-name value="cortiClient.transcripts.list" />
        <test-name value="full parameter tests" />
        <test-name value="should return different responses when full parameter is true vs false" />
      </test-names>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.templates.list.integration.ts" />
      <item itemvalue="Jest.All Integration Tests" />
      <item itemvalue="Jest.cortiClient.transcripts.list.full parameter tests.should return different responses when full parameter is true vs false" />
      <item itemvalue="Jest.cortiClient.transcripts.create.should create transcript with only required values.should create transcript with only required fields without errors or warnings" />
      <item itemvalue="Jest.cortiClient.templates.list" />
      <item itemvalue="Jest.cortiClient.templates.list.language filtering (lang parameter).should filter templates by multiple languages (lang: [&quot;da&quot;, &quot;en&quot;])" />
      <item itemvalue="Jest.cortiClient.templates.list.organization filtering (org parameter).should filter templates by multiple organizations (org: [&quot;corti&quot;, &quot;another-org&quot;])" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.cortiClient.transcripts.list.full parameter tests.should return different responses when full parameter is true vs false" />
        <item itemvalue="Jest.cortiClient.transcripts.create.should create transcript with only required values.should create transcript with only required fields without errors or warnings" />
        <item itemvalue="Jest.cortiClient.templates.list.language filtering (lang parameter).should filter templates by multiple languages (lang: [&quot;da&quot;, &quot;en&quot;])" />
        <item itemvalue="Jest.cortiClient.templates.list.organization filtering (org parameter).should filter templates by multiple organizations (org: [&quot;corti&quot;, &quot;another-org&quot;])" />
        <item itemvalue="Jest.cortiClient.templates.list" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-WS-243.25659.40" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5636f06c-1d6a-486b-a292-d931ebe67d75" name="Changes" comment="" />
      <created>1749126500366</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749126500366</updated>
      <workItem from="1749126501516" duration="8359000" />
      <workItem from="1750081285507" duration="21031000" />
      <workItem from="1750232991353" duration="55301000" />
      <workItem from="1751877811313" duration="25351000" />
      <workItem from="1752222101810" duration="14903000" />
      <workItem from="1752656437766" duration="6754000" />
      <workItem from="1753094002753" duration="109890000" />
      <workItem from="1755507051698" duration="1030000" />
      <workItem from="1755522961881" duration="13250000" />
      <workItem from="1756193773912" duration="8953000" />
      <workItem from="1757934170878" duration="34543000" />
    </task>
    <task id="LOCAL-00109" summary="Replaced BetaEu with Eu">
      <option name="closed" value="true" />
      <created>1753712235161</created>
      <option name="number" value="00109" />
      <option name="presentableId" value="LOCAL-00109" />
      <option name="project" value="LOCAL" />
      <updated>1753712235161</updated>
    </task>
    <task id="LOCAL-00110" summary="Returned config after regeneration">
      <option name="closed" value="true" />
      <created>1753712366037</created>
      <option name="number" value="00110" />
      <option name="presentableId" value="LOCAL-00110" />
      <option name="project" value="LOCAL" />
      <updated>1753712366037</updated>
    </task>
    <task id="LOCAL-00111" summary="Added Integration tests step to CI">
      <option name="closed" value="true" />
      <created>1753712721231</created>
      <option name="number" value="00111" />
      <option name="presentableId" value="LOCAL-00111" />
      <option name="project" value="LOCAL" />
      <updated>1753712721231</updated>
    </task>
    <task id="LOCAL-00112" summary="Added Integration tests step to CI">
      <option name="closed" value="true" />
      <created>1753712989399</created>
      <option name="number" value="00112" />
      <option name="presentableId" value="LOCAL-00112" />
      <option name="project" value="LOCAL" />
      <updated>1753712989399</updated>
    </task>
    <task id="LOCAL-00113" summary="Added Integration tests step to CI">
      <option name="closed" value="true" />
      <created>1753713011977</created>
      <option name="number" value="00113" />
      <option name="presentableId" value="LOCAL-00113" />
      <option name="project" value="LOCAL" />
      <updated>1753713011977</updated>
    </task>
    <task id="LOCAL-00114" summary="Taking envs data from variables, not secrets">
      <option name="closed" value="true" />
      <created>1753713370364</created>
      <option name="number" value="00114" />
      <option name="presentableId" value="LOCAL-00114" />
      <option name="project" value="LOCAL" />
      <updated>1753713370365</updated>
    </task>
    <task id="LOCAL-00115" summary="Added recordings tests">
      <option name="closed" value="true" />
      <created>1753787581070</created>
      <option name="number" value="00115" />
      <option name="presentableId" value="LOCAL-00115" />
      <option name="project" value="LOCAL" />
      <updated>1753787581070</updated>
    </task>
    <task id="LOCAL-00116" summary="added test recording to download">
      <option name="closed" value="true" />
      <created>1753787608015</created>
      <option name="number" value="00116" />
      <option name="presentableId" value="LOCAL-00116" />
      <option name="project" value="LOCAL" />
      <updated>1753787608015</updated>
    </task>
    <task id="LOCAL-00117" summary="Added transcripts tests">
      <option name="closed" value="true" />
      <created>1753789954791</created>
      <option name="number" value="00117" />
      <option name="presentableId" value="LOCAL-00117" />
      <option name="project" value="LOCAL" />
      <updated>1753789954791</updated>
    </task>
    <task id="LOCAL-00118" summary="Updated interactions list tests">
      <option name="closed" value="true" />
      <created>1753791053224</created>
      <option name="number" value="00118" />
      <option name="presentableId" value="LOCAL-00118" />
      <option name="project" value="LOCAL" />
      <updated>1753791053225</updated>
    </task>
    <task id="LOCAL-00119" summary="Removed console.logs">
      <option name="closed" value="true" />
      <created>1753878373032</created>
      <option name="number" value="00119" />
      <option name="presentableId" value="LOCAL-00119" />
      <option name="project" value="LOCAL" />
      <updated>1753878373032</updated>
    </task>
    <task id="LOCAL-00120" summary="Added WS tests">
      <option name="closed" value="true" />
      <created>1753972613923</created>
      <option name="number" value="00120" />
      <option name="presentableId" value="LOCAL-00120" />
      <option name="project" value="LOCAL" />
      <updated>1753972613923</updated>
    </task>
    <task id="LOCAL-00121" summary="Fixed documentation tests">
      <option name="closed" value="true" />
      <created>1753973591633</created>
      <option name="number" value="00121" />
      <option name="presentableId" value="LOCAL-00121" />
      <option name="project" value="LOCAL" />
      <updated>1753973591634</updated>
    </task>
    <task id="LOCAL-00122" summary="Added ability to pass environment as a string to CortiAuth class">
      <option name="closed" value="true" />
      <created>1753974992336</created>
      <option name="number" value="00122" />
      <option name="presentableId" value="LOCAL-00122" />
      <option name="project" value="LOCAL" />
      <updated>1753974992336</updated>
    </task>
    <task id="LOCAL-00123" summary="Updated .fernignore and flaky tests">
      <option name="closed" value="true" />
      <created>1753975733072</created>
      <option name="number" value="00123" />
      <option name="presentableId" value="LOCAL-00123" />
      <option name="project" value="LOCAL" />
      <updated>1753975733072</updated>
    </task>
    <task id="LOCAL-00124" summary="Closed all socket connections">
      <option name="closed" value="true" />
      <created>1753977145634</created>
      <option name="number" value="00124" />
      <option name="presentableId" value="LOCAL-00124" />
      <option name="project" value="LOCAL" />
      <updated>1753977145635</updated>
    </task>
    <task id="LOCAL-00125" summary="Stabilised some of the tests">
      <option name="closed" value="true" />
      <created>1753985021691</created>
      <option name="number" value="00125" />
      <option name="presentableId" value="LOCAL-00125" />
      <option name="project" value="LOCAL" />
      <updated>1753985021691</updated>
    </task>
    <task id="LOCAL-00126" summary="Fixed another flaky test">
      <option name="closed" value="true" />
      <created>1753987840947</created>
      <option name="number" value="00126" />
      <option name="presentableId" value="LOCAL-00126" />
      <option name="project" value="LOCAL" />
      <updated>1753987840947</updated>
    </task>
    <task id="LOCAL-00127" summary="Fixed an export">
      <option name="closed" value="true" />
      <created>1753989412214</created>
      <option name="number" value="00127" />
      <option name="presentableId" value="LOCAL-00127" />
      <option name="project" value="LOCAL" />
      <updated>1753989412214</updated>
    </task>
    <task id="LOCAL-00128" summary="Removed coverage">
      <option name="closed" value="true" />
      <created>1753989803743</created>
      <option name="number" value="00128" />
      <option name="presentableId" value="LOCAL-00128" />
      <option name="project" value="LOCAL" />
      <updated>1753989803743</updated>
    </task>
    <task id="LOCAL-00129" summary="Fixed another export">
      <option name="closed" value="true" />
      <created>1753990312850</created>
      <option name="number" value="00129" />
      <option name="presentableId" value="LOCAL-00129" />
      <option name="project" value="LOCAL" />
      <updated>1753990312850</updated>
    </task>
    <task id="LOCAL-00130" summary="Fixed another flaky test">
      <option name="closed" value="true" />
      <created>1753991142942</created>
      <option name="number" value="00130" />
      <option name="presentableId" value="LOCAL-00130" />
      <option name="project" value="LOCAL" />
      <updated>1753991142942</updated>
    </task>
    <task id="LOCAL-00131" summary="Branded library as JavaScript">
      <option name="closed" value="true" />
      <created>1756120723787</created>
      <option name="number" value="00131" />
      <option name="presentableId" value="LOCAL-00131" />
      <option name="project" value="LOCAL" />
      <updated>1756120723788</updated>
    </task>
    <task id="LOCAL-00132" summary="Temporary fix to remove unwanted headers">
      <option name="closed" value="true" />
      <created>1756125771168</created>
      <option name="number" value="00132" />
      <option name="presentableId" value="LOCAL-00132" />
      <option name="project" value="LOCAL" />
      <updated>1756125771168</updated>
    </task>
    <task id="LOCAL-00133" summary="Skipped unit test for a function we temporary patched">
      <option name="closed" value="true" />
      <created>1756126011961</created>
      <option name="number" value="00133" />
      <option name="presentableId" value="LOCAL-00133" />
      <option name="project" value="LOCAL" />
      <updated>1756126011961</updated>
    </task>
    <task id="LOCAL-00134" summary="chore: removed unnecessary patches">
      <option name="closed" value="true" />
      <created>1756368905356</created>
      <option name="number" value="00134" />
      <option name="presentableId" value="LOCAL-00134" />
      <option name="project" value="LOCAL" />
      <updated>1756368905356</updated>
    </task>
    <task id="LOCAL-00135" summary="chore: updated language">
      <option name="closed" value="true" />
      <created>1756388798501</created>
      <option name="number" value="00135" />
      <option name="presentableId" value="LOCAL-00135" />
      <option name="project" value="LOCAL" />
      <updated>1756388798501</updated>
    </task>
    <task id="LOCAL-00136" summary="chore: removed warning">
      <option name="closed" value="true" />
      <created>1756389309059</created>
      <option name="number" value="00136" />
      <option name="presentableId" value="LOCAL-00136" />
      <option name="project" value="LOCAL" />
      <updated>1756389309060</updated>
    </task>
    <task id="LOCAL-00137" summary="Made accessToken optional">
      <option name="closed" value="true" />
      <created>1757941144970</created>
      <option name="number" value="00137" />
      <option name="presentableId" value="LOCAL-00137" />
      <option name="project" value="LOCAL" />
      <updated>1757941144971</updated>
    </task>
    <task id="LOCAL-00138" summary="Checking for clientId instead and fixed comment">
      <option name="closed" value="true" />
      <created>1757942289049</created>
      <option name="number" value="00138" />
      <option name="presentableId" value="LOCAL-00138" />
      <option name="project" value="LOCAL" />
      <updated>1757942289049</updated>
    </task>
    <task id="LOCAL-00139" summary="Exported types">
      <option name="closed" value="true" />
      <created>1757944217916</created>
      <option name="number" value="00139" />
      <option name="presentableId" value="LOCAL-00139" />
      <option name="project" value="LOCAL" />
      <updated>1757944217916</updated>
    </task>
    <task id="LOCAL-00140" summary="Updated tokenType to be optional">
      <option name="closed" value="true" />
      <created>1758100106813</created>
      <option name="number" value="00140" />
      <option name="presentableId" value="LOCAL-00140" />
      <option name="project" value="LOCAL" />
      <updated>1758100106813</updated>
    </task>
    <task id="LOCAL-00141" summary="Access token is not a Supplier anymore">
      <option name="closed" value="true" />
      <created>1758100995561</created>
      <option name="number" value="00141" />
      <option name="presentableId" value="LOCAL-00141" />
      <option name="project" value="LOCAL" />
      <updated>1758100995561</updated>
    </task>
    <task id="LOCAL-00142" summary="feat: updated documentation">
      <option name="closed" value="true" />
      <created>1758113523951</created>
      <option name="number" value="00142" />
      <option name="presentableId" value="LOCAL-00142" />
      <option name="project" value="LOCAL" />
      <updated>1758113523951</updated>
    </task>
    <task id="LOCAL-00143" summary="chore: comment out integration tests in workflow configuration">
      <option name="closed" value="true" />
      <created>1758545990366</created>
      <option name="number" value="00143" />
      <option name="presentableId" value="LOCAL-00143" />
      <option name="project" value="LOCAL" />
      <updated>1758545990366</updated>
    </task>
    <task id="LOCAL-00144" summary="chore: comment out integration tests in workflow configuration">
      <option name="closed" value="true" />
      <created>1758706216293</created>
      <option name="number" value="00144" />
      <option name="presentableId" value="LOCAL-00144" />
      <option name="project" value="LOCAL" />
      <updated>1758706216293</updated>
    </task>
    <task id="LOCAL-00145" summary="feat: integrate Agents API into SDK with new import and getter method">
      <option name="closed" value="true" />
      <created>1758707129676</created>
      <option name="number" value="00145" />
      <option name="presentableId" value="LOCAL-00145" />
      <option name="project" value="LOCAL" />
      <updated>1758707129676</updated>
    </task>
    <task id="LOCAL-00146" summary="feat: add custom Agents version publishing to CI workflow">
      <option name="closed" value="true" />
      <created>1758707305243</created>
      <option name="number" value="00146" />
      <option name="presentableId" value="LOCAL-00146" />
      <option name="project" value="LOCAL" />
      <updated>1758707305243</updated>
    </task>
    <task id="LOCAL-00147" summary="feat: add agents API endpoint to environment configuration">
      <option name="closed" value="true" />
      <created>1758711838276</created>
      <option name="number" value="00147" />
      <option name="presentableId" value="LOCAL-00147" />
      <option name="project" value="LOCAL" />
      <updated>1758711838276</updated>
    </task>
    <task id="LOCAL-00148" summary="fix: update agents API URLs in environment configuration">
      <option name="closed" value="true" />
      <created>1758713012954</created>
      <option name="number" value="00148" />
      <option name="presentableId" value="LOCAL-00148" />
      <option name="project" value="LOCAL" />
      <updated>1758713012954</updated>
    </task>
    <task id="LOCAL-00149" summary="fix: update agents API URL in environment configuration">
      <option name="closed" value="true" />
      <created>1758713051023</created>
      <option name="number" value="00149" />
      <option name="presentableId" value="LOCAL-00149" />
      <option name="project" value="LOCAL" />
      <updated>1758713051023</updated>
    </task>
    <task id="LOCAL-00150" summary="feat: add support for agents release candidate tagging in CI workflow">
      <option name="closed" value="true" />
      <created>1758721931063</created>
      <option name="number" value="00150" />
      <option name="presentableId" value="LOCAL-00150" />
      <option name="project" value="LOCAL" />
      <updated>1758721931063</updated>
    </task>
    <task id="LOCAL-00151" summary="feat: enhance CI workflow to support agents release tagging">
      <option name="closed" value="true" />
      <created>1758722001973</created>
      <option name="number" value="00151" />
      <option name="presentableId" value="LOCAL-00151" />
      <option name="project" value="LOCAL" />
      <updated>1758722001973</updated>
    </task>
    <task id="LOCAL-00152" summary="fix: update reference link in README and .fernignore">
      <option name="closed" value="true" />
      <created>1758722296251</created>
      <option name="number" value="00152" />
      <option name="presentableId" value="LOCAL-00152" />
      <option name="project" value="LOCAL" />
      <updated>1758722296252</updated>
    </task>
    <task id="LOCAL-00153" summary="fix: update reference link in README and .fernignore">
      <option name="closed" value="true" />
      <created>1758722329686</created>
      <option name="number" value="00153" />
      <option name="presentableId" value="LOCAL-00153" />
      <option name="project" value="LOCAL" />
      <updated>1758722329686</updated>
    </task>
    <task id="LOCAL-00154" summary="feat: enable manual approval for integration tests and restore test execution">
      <option name="closed" value="true" />
      <created>1758888162116</created>
      <option name="number" value="00154" />
      <option name="presentableId" value="LOCAL-00154" />
      <option name="project" value="LOCAL" />
      <updated>1758888162116</updated>
    </task>
    <task id="LOCAL-00155" summary="feat: enable manual approval for integration tests and restore test execution">
      <option name="closed" value="true" />
      <created>1758888186460</created>
      <option name="number" value="00155" />
      <option name="presentableId" value="LOCAL-00155" />
      <option name="project" value="LOCAL" />
      <updated>1758888186460</updated>
    </task>
    <task id="LOCAL-00156" summary="feat: enable manual approval for integration tests and restore test execution">
      <option name="closed" value="true" />
      <created>1758888200069</created>
      <option name="number" value="00156" />
      <option name="presentableId" value="LOCAL-00156" />
      <option name="project" value="LOCAL" />
      <updated>1758888200069</updated>
    </task>
    <task id="LOCAL-00157" summary="refactor: remove skipped tests and unused modelName references in integration tests">
      <option name="closed" value="true" />
      <created>1759136095974</created>
      <option name="number" value="00157" />
      <option name="presentableId" value="LOCAL-00157" />
      <option name="project" value="LOCAL" />
      <updated>1759136095975</updated>
    </task>
    <option name="localTasksCounter" value="158" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="incorporate-agents-api-to-sdk-gro-398" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="incorporate-agents-api-to-sdk-gro-398-agents" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="master" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="HEAD" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="clean-up" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="incorporate-agents-api-to-sdk-gro-398" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fixed another export" />
    <MESSAGE value="Fixed another flaky test" />
    <MESSAGE value="Branded library as JavaScript" />
    <MESSAGE value="Temporary fix to remove unwanted headers" />
    <MESSAGE value="Skipped unit test for a function we temporary patched" />
    <MESSAGE value="chore: removed unnecessary patches" />
    <MESSAGE value="chore: updated language" />
    <MESSAGE value="chore: removed warning" />
    <MESSAGE value="Made accessToken optional" />
    <MESSAGE value="Checking for clientId instead and fixed comment" />
    <MESSAGE value="Exported types" />
    <MESSAGE value="Updated tokenType to be optional" />
    <MESSAGE value="Access token is not a Supplier anymore" />
    <MESSAGE value="feat: updated documentation" />
    <MESSAGE value="chore: comment out integration tests in workflow configuration" />
    <MESSAGE value="feat: integrate Agents API into SDK with new import and getter method" />
    <MESSAGE value="feat: add custom Agents version publishing to CI workflow" />
    <MESSAGE value="feat: add agents API endpoint to environment configuration" />
    <MESSAGE value="fix: update agents API URLs in environment configuration" />
    <MESSAGE value="fix: update agents API URL in environment configuration" />
    <MESSAGE value="feat: add support for agents release candidate tagging in CI workflow" />
    <MESSAGE value="feat: enhance CI workflow to support agents release tagging" />
    <MESSAGE value="fix: update reference link in README and .fernignore" />
    <MESSAGE value="feat: enable manual approval for integration tests and restore test execution" />
    <MESSAGE value="refactor: remove skipped tests and unused modelName references in integration tests" />
    <option name="LAST_COMMIT_MESSAGE" value="refactor: remove skipped tests and unused modelName references in integration tests" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/corti_sdk_typescript$cortiClient_interactions_create.info" NAME="cortiClient.interactions.create Coverage Results" MODIFIED="1753271422523" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="JestJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>