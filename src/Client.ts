/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments.js";
import * as core from "./core/index.js";
import { Interactions } from "./api/resources/interactions/client/Client.js";

export declare namespace CortiClient {
    export interface Options {
        environment?: core.Supplier<environments.CortiEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        /** Override the Tenant-Name header */
        tenantName: core.Supplier<string>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Tenant-Name header */
        tenantName?: string;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class CortiClient {
    protected _interactions: Interactions | undefined;

    constructor(protected readonly _options: CortiClient.Options) {}

    public get interactions(): Interactions {
        return (this._interactions ??= new Interactions(this._options));
    }
}
