/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index.js";
import * as Corti from "../../../../../api/index.js";
import * as core from "../../../../../core/index.js";
import { DocumentsContext } from "../../../../types/DocumentsContext.js";
import { Uuid } from "../../../../types/Uuid.js";
import { DocumentsTemplate } from "../../../../types/DocumentsTemplate.js";

export const DocumentsCreateRequest: core.serialization.Schema<
    serializers.DocumentsCreateRequest.Raw,
    Corti.DocumentsCreateRequest
> = core.serialization.object({
    context: core.serialization.list(DocumentsContext),
    templateId: Uuid.optional(),
    templateKey: core.serialization.string().optional(),
    template: DocumentsTemplate.optional(),
    name: core.serialization.string().optional(),
    modelName: core.serialization.string().optional(),
    outputLanguage: core.serialization.string(),
});

export declare namespace DocumentsCreateRequest {
    export interface Raw {
        context: DocumentsContext.Raw[];
        templateId?: Uuid.Raw | null;
        templateKey?: string | null;
        template?: DocumentsTemplate.Raw | null;
        name?: string | null;
        modelName?: string | null;
        outputLanguage: string;
    }
}
