/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index.js";
import * as Corti from "../../../../../api/index.js";
import * as core from "../../../../../core/index.js";
import { Uuid } from "../../../../types/Uuid.js";
import { InteractionsEncounterUpdateRequest } from "../../../../types/InteractionsEncounterUpdateRequest.js";
import { InteractionsPatient } from "../../../../types/InteractionsPatient.js";

export const InteractionsUpdateRequest: core.serialization.Schema<
    serializers.InteractionsUpdateRequest.Raw,
    Corti.InteractionsUpdateRequest
> = core.serialization.object({
    assignedUserId: Uuid.optional(),
    encounter: InteractionsEncounterUpdateRequest.optional(),
    patient: InteractionsPatient.optional(),
});

export declare namespace InteractionsUpdateRequest {
    export interface Raw {
        assignedUserId?: Uuid.Raw | null;
        encounter?: InteractionsEncounterUpdateRequest.Raw | null;
        patient?: InteractionsPatient.Raw | null;
    }
}
