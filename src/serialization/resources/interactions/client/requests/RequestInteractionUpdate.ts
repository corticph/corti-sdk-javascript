/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index.js";
import * as Corti from "../../../../../api/index.js";
import * as core from "../../../../../core/index.js";
import { Uuid } from "../../../../types/Uuid.js";
import { EncounterUpdate } from "../../../../types/EncounterUpdate.js";
import { PatientUpdate } from "../../../../types/PatientUpdate.js";

export const RequestInteractionUpdate: core.serialization.Schema<
    serializers.RequestInteractionUpdate.Raw,
    Corti.RequestInteractionUpdate
> = core.serialization.object({
    assignedUserId: Uuid.optional(),
    encounter: EncounterUpdate.optional(),
    patient: PatientUpdate.optional(),
});

export declare namespace RequestInteractionUpdate {
    export interface Raw {
        assignedUserId?: Uuid.Raw | null;
        encounter?: EncounterUpdate.Raw | null;
        patient?: PatientUpdate.Raw | null;
    }
}
