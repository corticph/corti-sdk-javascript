/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Corti from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { AgentsMessage } from "../../../types/AgentsMessage.js";
import { AgentsTask } from "../../../types/AgentsTask.js";
import { AgentsTaskStatusUpdateEvent } from "../../../types/AgentsTaskStatusUpdateEvent.js";
import { AgentsTaskArtifactUpdateEvent } from "../../../types/AgentsTaskArtifactUpdateEvent.js";

export const AgentsMessageStreamResponse: core.serialization.ObjectSchema<
    serializers.AgentsMessageStreamResponse.Raw,
    Corti.AgentsMessageStreamResponse
> = core.serialization.object({
    message: AgentsMessage.optional(),
    task: AgentsTask.optional(),
    statusUpdate: AgentsTaskStatusUpdateEvent.optional(),
    artifactUpdate: AgentsTaskArtifactUpdateEvent.optional(),
});

export declare namespace AgentsMessageStreamResponse {
    export interface Raw {
        message?: AgentsMessage.Raw | null;
        task?: AgentsTask.Raw | null;
        statusUpdate?: AgentsTaskStatusUpdateEvent.Raw | null;
        artifactUpdate?: AgentsTaskArtifactUpdateEvent.Raw | null;
    }
}
