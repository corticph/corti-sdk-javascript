/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { AgentsTask } from "./AgentsTask.js";
import { AgentsMessage } from "./AgentsMessage.js";

export const AgentsContextItemsItem: core.serialization.Schema<
    serializers.AgentsContextItemsItem.Raw,
    Corti.AgentsContextItemsItem
> = core.serialization
    .union("kind", {
        task: AgentsTask,
        message: AgentsMessage,
    })
    .transform<Corti.AgentsContextItemsItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AgentsContextItemsItem {
    export type Raw = AgentsContextItemsItem.Task | AgentsContextItemsItem.Message;

    export interface Task extends AgentsTask.Raw {
        kind: "task";
    }

    export interface Message extends AgentsMessage.Raw {
        kind: "message";
    }
}
