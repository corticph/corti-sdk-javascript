/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { ConfigTranscriptionPrimaryLanguage } from "./ConfigTranscriptionPrimaryLanguage.js";
import { ConfigParticipant } from "./ConfigParticipant.js";

export const ConfigTranscription: core.serialization.ObjectSchema<
    serializers.ConfigTranscription.Raw,
    Corti.ConfigTranscription
> = core.serialization.object({
    primaryLanguage: ConfigTranscriptionPrimaryLanguage.optional(),
    isMultichannel: core.serialization.boolean().optional(),
    isDiarization: core.serialization.boolean().optional(),
    participants: core.serialization.list(ConfigParticipant).optional(),
    model: core.serialization.stringLiteral("model1").optional(),
});

export declare namespace ConfigTranscription {
    export interface Raw {
        primaryLanguage?: ConfigTranscriptionPrimaryLanguage.Raw | null;
        isMultichannel?: boolean | null;
        isDiarization?: boolean | null;
        participants?: ConfigParticipant.Raw[] | null;
        model?: "model1" | null;
    }
}
