/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { DocumentsContextWithFact } from "./DocumentsContextWithFact.js";
import { DocumentsContextWithTranscript } from "./DocumentsContextWithTranscript.js";
import { DocumentsContextWithString } from "./DocumentsContextWithString.js";

export const DocumentsContext: core.serialization.Schema<serializers.DocumentsContext.Raw, Corti.DocumentsContext> =
    core.serialization
        .union("type", {
            facts: DocumentsContextWithFact,
            transcript: DocumentsContextWithTranscript,
            string: DocumentsContextWithString,
        })
        .transform<Corti.DocumentsContext>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace DocumentsContext {
    export type Raw = DocumentsContext.Facts | DocumentsContext.Transcript | DocumentsContext.String;

    export interface Facts extends DocumentsContextWithFact.Raw {
        type: "facts";
    }

    export interface Transcript extends DocumentsContextWithTranscript.Raw {
        type: "transcript";
    }

    export interface String extends DocumentsContextWithString.Raw {
        type: "string";
    }
}
