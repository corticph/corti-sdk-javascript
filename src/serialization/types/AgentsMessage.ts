/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { AgentsMessageRole } from "./AgentsMessageRole.js";
import { AgentsPart } from "./AgentsPart.js";

export const AgentsMessage: core.serialization.ObjectSchema<serializers.AgentsMessage.Raw, Corti.AgentsMessage> =
    core.serialization.object({
        role: AgentsMessageRole,
        parts: core.serialization.list(AgentsPart),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        extensions: core.serialization.list(core.serialization.string()).optional(),
        referenceTaskIds: core.serialization.list(core.serialization.string()).optional(),
        messageId: core.serialization.string(),
        taskId: core.serialization.string().optional(),
        contextId: core.serialization.string().optional(),
    });

export declare namespace AgentsMessage {
    export interface Raw {
        role: AgentsMessageRole.Raw;
        parts: AgentsPart.Raw[];
        metadata?: Record<string, unknown> | null;
        extensions?: string[] | null;
        referenceTaskIds?: string[] | null;
        messageId: string;
        taskId?: string | null;
        contextId?: string | null;
    }
}
