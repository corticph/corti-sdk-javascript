/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";

export const StreamFact: core.serialization.ObjectSchema<serializers.StreamFact.Raw, Corti.StreamFact> =
    core.serialization.object({
        id: core.serialization.string(),
        text: core.serialization.string(),
        group: core.serialization.string(),
        groupId: core.serialization.string(),
        isDiscarded: core.serialization.boolean(),
        source: core.serialization.string(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date().optional(),
        createdAtTzOffset: core.serialization.date().optional(),
        updatedAtTzOffset: core.serialization.date().optional(),
    });

export declare namespace StreamFact {
    export interface Raw {
        id: string;
        text: string;
        group: string;
        groupId: string;
        isDiscarded: boolean;
        source: string;
        createdAt: string;
        updatedAt?: string | null;
        createdAtTzOffset?: string | null;
        updatedAtTzOffset?: string | null;
    }
}
