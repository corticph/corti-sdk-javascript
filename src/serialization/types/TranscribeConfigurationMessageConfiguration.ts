/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { TranscribeSupportedLanguage } from "./TranscribeSupportedLanguage.js";
import { TranscribeCommand } from "./TranscribeCommand.js";

export const TranscribeConfigurationMessageConfiguration: core.serialization.ObjectSchema<
    serializers.TranscribeConfigurationMessageConfiguration.Raw,
    Corti.TranscribeConfigurationMessageConfiguration
> = core.serialization.object({
    primaryLanguage: TranscribeSupportedLanguage,
    interimResults: core.serialization.boolean().optional(),
    spokenPunctuation: core.serialization.boolean().optional(),
    automaticPunctuation: core.serialization.boolean().optional(),
    commands: core.serialization.list(TranscribeCommand).optional(),
});

export declare namespace TranscribeConfigurationMessageConfiguration {
    export interface Raw {
        primaryLanguage: TranscribeSupportedLanguage.Raw;
        interimResults?: boolean | null;
        spokenPunctuation?: boolean | null;
        automaticPunctuation?: boolean | null;
        commands?: TranscribeCommand.Raw[] | null;
    }
}
