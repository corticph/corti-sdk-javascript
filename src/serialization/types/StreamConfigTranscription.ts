/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { StreamConfigTranscriptionPrimaryLanguage } from "./StreamConfigTranscriptionPrimaryLanguage.js";
import { StreamParticipant } from "./StreamParticipant.js";

export const StreamConfigTranscription: core.serialization.ObjectSchema<
    serializers.StreamConfigTranscription.Raw,
    Corti.StreamConfigTranscription
> = core.serialization.object({
    primaryLanguage: StreamConfigTranscriptionPrimaryLanguage,
    isDiarization: core.serialization.boolean().optional(),
    isMultichannel: core.serialization.boolean().optional(),
    participants: core.serialization.list(StreamParticipant),
});

export declare namespace StreamConfigTranscription {
    export interface Raw {
        primaryLanguage: StreamConfigTranscriptionPrimaryLanguage.Raw;
        isDiarization?: boolean | null;
        isMultichannel?: boolean | null;
        participants: StreamParticipant.Raw[];
    }
}
