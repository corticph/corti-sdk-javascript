/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { AgentsTaskStatus } from "./AgentsTaskStatus.js";
import { AgentsMessage } from "./AgentsMessage.js";
import { AgentsArtifact } from "./AgentsArtifact.js";

export const AgentsTask: core.serialization.ObjectSchema<serializers.AgentsTask.Raw, Corti.AgentsTask> =
    core.serialization.object({
        id: core.serialization.string(),
        contextId: core.serialization.string(),
        status: AgentsTaskStatus,
        history: core.serialization.list(AgentsMessage).optional(),
        artifacts: core.serialization.list(AgentsArtifact).optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace AgentsTask {
    export interface Raw {
        id: string;
        contextId: string;
        status: AgentsTaskStatus.Raw;
        history?: AgentsMessage.Raw[] | null;
        artifacts?: AgentsArtifact.Raw[] | null;
        metadata?: Record<string, unknown> | null;
    }
}
