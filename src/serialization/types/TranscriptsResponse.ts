/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { Uuid } from "./Uuid.js";
import { TranscriptsMetadata } from "./TranscriptsMetadata.js";
import { CommonTranscriptResponse } from "./CommonTranscriptResponse.js";
import { CommonUsage } from "./CommonUsage.js";

export const TranscriptsResponse: core.serialization.ObjectSchema<
    serializers.TranscriptsResponse.Raw,
    Corti.TranscriptsResponse
> = core.serialization.object({
    id: Uuid,
    metadata: TranscriptsMetadata,
    transcripts: core.serialization.list(CommonTranscriptResponse).optionalNullable(),
    usage: CommonUsage.optional(),
});

export declare namespace TranscriptsResponse {
    export interface Raw {
        id: Uuid.Raw;
        metadata: TranscriptsMetadata.Raw;
        transcripts?: (CommonTranscriptResponse.Raw[] | null) | null;
        usage?: CommonUsage.Raw | null;
    }
}
