/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Corti from "../../api/index.js";
import * as core from "../../core/index.js";
import { AgentsArtifact } from "./AgentsArtifact.js";

export const AgentsTaskArtifactUpdateEvent: core.serialization.ObjectSchema<
    serializers.AgentsTaskArtifactUpdateEvent.Raw,
    Corti.AgentsTaskArtifactUpdateEvent
> = core.serialization.object({
    taskId: core.serialization.string(),
    contextId: core.serialization.string(),
    kind: core.serialization.stringLiteral("artifact-update"),
    artifact: AgentsArtifact,
    append: core.serialization.boolean().optional(),
    lastChunk: core.serialization.boolean().optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace AgentsTaskArtifactUpdateEvent {
    export interface Raw {
        taskId: string;
        contextId: string;
        kind: "artifact-update";
        artifact: AgentsArtifact.Raw;
        append?: boolean | null;
        lastChunk?: boolean | null;
        metadata?: Record<string, unknown> | null;
    }
}
